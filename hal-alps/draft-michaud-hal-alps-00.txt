 



Network Working Group                                         J. Michaud
Internet-Draft                                            March 17, 2017
Intended status: Informational                                          
Expires: September 18, 2017                                             


                         ALPS Bindings for HAL
                       draft-michaud-hal-alps-00

Abstract

   This document defines ALPS bindings for the application/hal+json and
   application/hal+xml media-types.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





 


Michaud                Expires September 18, 2017               [Page 1]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2
   2.  Requirements . . . . . . . . . . . . . . . . . . . . . . . . .  2
   3.  A Review of ALPS Principles  . . . . . . . . . . . . . . . . .  2
   4.  Servers and Clients  . . . . . . . . . . . . . . . . . . . . .  3
   5.  Advertising ALPS Profiles for HAL Representations  . . . . . .  3
     5.1.  HAL profile and type relations . . . . . . . . . . . . . .  3
     5.2.  Link Header  . . . . . . . . . . . . . . . . . . . . . . .  4
     5.3.  Additional Considerations  . . . . . . . . . . . . . . . .  4
   6.  Basic Mapping Rules for ALPS to HAL  . . . . . . . . . . . . .  5
     6.1.  ALPS descriptor properties property  . . . . . . . . . . .  5
       6.1.1.  id . . . . . . . . . . . . . . . . . . . . . . . . . .  5
       6.1.2.  name . . . . . . . . . . . . . . . . . . . . . . . . .  6
       6.1.3.  type . . . . . . . . . . . . . . . . . . . . . . . . .  7
         6.1.3.1. semantic  . . . . . . . . . . . . . . . . . . . . .  7
         6.1.3.2. safe, unsafe, or idempotent . . . . . . . . . . . . 10
   7.  Recommendations  . . . . . . . . . . . . . . . . . . . . . . . 11
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 11
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11
   10.  Normative References  . . . . . . . . . . . . . . . . . . . . 12
   11.  Informative References  . . . . . . . . . . . . . . . . . . . 12
   Appendix A.  Acknowledgements  . . . . . . . . . . . . . . . . . . 12
   Appendix B.  Frequently Asked Questions  . . . . . . . . . . . . . 12
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 12


1.  Introduction

   In order to provide coherent use of Application Level Profile
   Semantics (ALPS) [I-D.draft-amundsen-richardson-foster-alps] in HAL
   documents [I-D.draft-kelly-json-hal] and [I-D.draft-michaud-xml-hal],
   ALPS bindings for the HAL media-types (application/hal+json and
   application/hal+xml) must be defined.

   This specification establishes conventions required for consistent
   expression of Application Level Profile Semantics (ALPS) in HAL
   documents.

2.  Requirements

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  A Review of ALPS Principles

   The Application-Level Profile Semantics (ALPS) [I-D.draft-amundsen-
 


Michaud                Expires September 18, 2017               [Page 2]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   richardson-foster-alps] specification is designed to describe the
   data elements and state transitions that make up a problem domain
   (e.g. micro-blogging, accounting, etc.). ALPS documents are designed
   to be useful to both client and server implementers and can be used
   at both run-time and design-time to handle the generation and
   interpretation of response representations. ALPS description
   documents are referred to as "profiles" or "profile documents".

   Since the aim is to support a wide set of use cases (clients,
   servers, run-time, design-time, etc.), ALPS profiles do not describe
   the runtime behavior of any single system. Instead, ALPS profiles
   describe the problem domain boundaries (e.g. the possible data
   elements and possible state transitions). It is up to implementers to
   decide how they wish to use ALPS profiles in order to create an
   actual service instance or client application.

4.  Servers and Clients

   For server implementers, ALPS profiles establish the list of possible
   identifiers for data values (givenName, familyName, etc.) and
   transitions (publish, createUser, etc). ALPS profiles also provide
   additional description information for state transitions including
   whether the transition is safe, idempotent or unsafe and, in some
   cases, whether there are any possible arguments that can be passed
   with each transition.

   Client implementers can use the same ALPS document as a guide for
   what to expect from a service which advertises support for an ALPS
   profile. For example, if a service announces that it uses the ALPS
   profile for micro-blogging, then any client application that was
   built to support the micro-blogging profile SHOULD be able to
   recognize all the important data elements and state transitions
   emitted by that service.

5.  Advertising ALPS Profiles for HAL Representations

   Servers returning HAL documents MUST only advertise the ALPS profiles
   they support using one of the following methods

5.1.  HAL profile and type relations

   HAL documents SHOULD use the profile and type relations in a HAL
   Link. The profile relation value SHOULD be set to the URL of the ALPS
   profile document and the type relation [RFC6903] SHOULD be set to the
   URL of the ALPS profile, or a URI fragment referencing a
   descriptor.id that exists in the referenced ALPS profile.

   As application/hal+json:
 


Michaud                Expires September 18, 2017               [Page 3]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": {
         "href": "/profiles/accounting"
       },
       "type": {
         "href": "/profiles/accounting"
       }
     }
   }

   As application/hal+xml:

   <resource rel="self" href="/svc">
     <link rel="profile" href="/profiles/accounting"/>
     <link rel="type" href="/profiles/accounting"/>
   </resource>

5.2.  Link Header

   Responses can include the Link header, in conformance with [RFC5988],
   with the href value set to the URL of the ALPS profile document or
   type and the rel value set to "profile" or "type"".

   Link: </profiles/accounting>;rel="profile",
   </profiles/accounting#invoice>;rel="type"

5.3.  Additional Considerations

   It is valid for a service to advertise support for more than one ALPS
   profile for the same response. For example, a single response from a
   server MAY include multiple HAL profile relations.

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/accounting"
       },
       {
         "href": "/profiles/finance"
 


Michaud                Expires September 18, 2017               [Page 4]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


       }],
       "type": [{
         "href": "/profiles/accounting"
       },
       {
         "href": "/profiles/finance"
       }]
     }
   }

   In the above case, the client application has been informed that the
   response MAY contain data elements and state transitions from both
   the finance and the accounting ALPS profiles.

   Clients accepting HAL documents SHOULD look for the ALPS profile in
   each of the mentioned places (.e.g. Link Header, HAL Profile
   Relation), as appropriate to the response. If an ALPS profile
   reference appears in more than one location, all profiles SHOULD be
   considered valid.

6.  Basic Mapping Rules for ALPS to HAL

6.1.  ALPS descriptor properties property

6.1.1.  id

   The descriptor.id and the ALPS.descriptor.type set to "semantic"
   SHOULD be transformed into a HAL document property with the same name
   as the descriptor.id.

   Below are valid examples for both the application/hal+json and the
   application/hal+xml media-types:

   <!-- ALPS document fragment -->
   <descriptor id="section" type="semantic">
     <descriptor id="name" type="semantic" />
     <descriptor id="description" type="semantic" />
   </descriptor>

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/hcli"
 


Michaud                Expires September 18, 2017               [Page 5]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


       }],
       "type": [{
         "href": "/profiles/hcli"
       }]
     },
     "section": [
       {
         "name": "name",
         "description": "A simple formatter for JSON"
       },
       {
         "name": "synopsis",
         "description": "jsonf <command>"
       }
     ]
   }

   As application/hal+xml:

   <resource self="/svc">
     <link rel="profile" href="/profiles/hcli"/>
     <link rel="type" href="/profiles/hcli"/>
     <section>
       <name>name</name>
       <description>A simple formatter for JSON</description>
     </section>
     <section>
       <name>synopsis</name>
       <description>jsonf &lt;command&gt;</description>
     </section>
   </resource>

   One notable exception exists when a semantic descriptor.type contains
   a non-semantic descriptor.type. This is covered in a later section
   covering non-semantic descriptor.type.

6.1.2.  name

   The descriptor.name property semantics are undefined if the semantic
   descriptor case and SHOULD NOT be used.

   The descriptor.name property semantics are otherwise defined in the
   non-semantic descriptor case and MAY be used to help differentiate
   between otherwise identical descriptor.id and HAL link relation to
   enable client-side filtering.

   <!-- ALPS document fragment -->
   <descriptor id="next" name="book" type="safe"/>
 


Michaud                Expires September 18, 2017               [Page 6]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   <descriptor id="next" name="movie" type="safe"/>

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/hcli"
       }],
       "type": [{
         "href": "/profiles/hcli"
       },
       "next": [{
         "href": "/svc/book/2",
         "name": "book"
       },
       {
         "href": "/svc/movie/2",
         "name": "movie"
       }]
     }
   }

   As application/hal+xml:

   <resource self="/svc">
     <link rel="profile" href="/profiles/hcli"/>
     <link rel="type" href="/profiles/hcli"/>
     <link rel="next" href="/svc/book/2" name="book"/>
     <link rel="next" href="/svc/movie/2" name="movie"/>
   </resource>
6.1.3.  type

6.1.3.1. semantic

   Coverage for the descriptor.type property with a value of "semantic"
   is covered under sections covering descriptor.id and descriptor.name.

   However, an important exception to the semantic descriptor.id case
   exists; when a semantic descriptor contains a non-semantic
   descriptor. Such cases lead to the formation of linked resources or
   embedded resources, or both, in a HAL document. Determination of
   whether formation leads to the presence of a link, an embedded
   resource, or both, is left to service implementers.

 


Michaud                Expires September 18, 2017               [Page 7]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   If a service presents a link, the link should use the non-semantic
   descriptor.id as the link relation. The HAL "profile" link property
   SHOULD contain a URI to the ALPS profile and the HAL "type" link
   property SHOULD contain a URI to the ALPS profile followed by a URI
   fragment referencing the descriptor.id of the containing semantic
   descriptor.id.

   If a service presents an embedded resource, the embedded resource
   SHOULD contain a "profile" link relation referencing the URI of the
   ALPS profile, a "type" link relation referencing the URI of the ALPS
   profile and fragment referencing the descriptor.id of the containing
   semantic descriptor.id

   <!-- ALPS document fragment -->
   <descriptor id="command" type="semantic">
     <descriptor id="item" type="safe">
       <doc>A link to an individual command summary.</doc>

       <descriptor id="next" type="unsafe">
         <doc>A link to select a command.</doc>
       </descriptor>
     </descriptor>
     <descriptor id="name" type="semantic" />
     <descriptor id="description" type="semantic" />
   </descriptor> 

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/hcli"
       }],
       "type": [{
         "href": "/profiles/hcli"
       },
       "item": {
         "href": "/svc/jsonf/def/go?command=jsonf",
         "profile": "/profiles/hcli",
         "type" : "/profiles/hcli#command"
       }
     },
     "_embedded" : {
       "item" : [{
         "_links" : {
 


Michaud                Expires September 18, 2017               [Page 8]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


           "self" : {
             "href" : "/svc/jsonf/def/go?command=jsonf"
           },
           "next" : [{
             "href" : "/svc/jsonf?command=jsonf+go"
           }],
           "profile" : [{
             "href" : "/profiles/hcli"
           }],
           "type" : [{
             "href" : "/profiles/hcli#command"
           }]
         },
         "description" : "Kicks off JSON formatting.",
         "name" : "go"
       }]
     }
   }

   As application/hal+xml:

   <resource self="/svc">
     <link rel="profile" href="/profiles/hcli"/>
     <link rel="type" href="/profiles/hcli"/>
     <link rel="item"
           href="/svc/cli/jsonf/__cdef/go?command=jsonf"
           profile="/profiles/hcli"
           type="/profiles/hcli#command"/>
     <section>
       <name>name<name/>
       <description>A simple formatter for JSON</description>
     </section>
     <section>
       <name>synopsis<name/>
       <description>jsonf &lt;command&gt;</description>
     </section>
     <resource rel="item"
               href="/svc/cli/jsonf/__cdef/go?command=jsonf">
       <link rel="profile"
             href="/profiles/hcli"/>
       <link rel="type"
             href="/profiles/hcli#command"/>
       <link rel="next"
             href="/svc/jsonf?command=jsonf+go"/>
       <name>go</name>
       <description>Kicks off JSON formatting.</description>
     </resource>
   </resource>
 


Michaud                Expires September 18, 2017               [Page 9]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   Semantics for a semantic descriptor containing multiple peer non-
   semantic descriptors are undefined.

6.1.3.2. safe, unsafe, or idempotent

   If a non-semantic descriptor (e.g. "safe", "unsafe", or "idempotent")
   is otherwise not embedded in a semantic descriptor, then it SHOULD
   yield the formation of a link or a templated link (a form). Notably,
   the HAL profile and type properties SHOULD be absent. The
   descriptor.id value SHOULD be used as the name of the value to fill
   in the URI template.

6.1.3.2.1.  Without a contained semantic descriptor

   If a non-semantic descriptor does not contain a semantic descriptor,
   then it SHOULD yield to the formation of a link.

   <!-- ALPS document fragment -->
   <descriptor id="next" type="safe"/>

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/hcli"
       }],
       "type": [{
         "href": "/profiles/hcli"
       },
       "next": {
         "href": "/svc/item"
       }
     }
   }

   As application/hal+xml:

   <resource self="/svc">
     <link rel="profile" href="/profiles/hcli"/>
     <link rel="type" href="/profiles/hcli"/>
     <link rel="next" href="/svc/item"/>
   </resource>

6.1.3.2.2.  With a contained semantic descriptor
 


Michaud                Expires September 18, 2017              [Page 10]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   If a non-semantic descriptor contains a semantic descriptor, then it
   SHOULD yield to the formation of a templated link (a form).

   <!-- ALPS document fragment -->
   <descriptor id="collection" type="safe">
     <doc format="text">A search form with one input.</doc>
     <descriptor id="id" type="semantic" />
   </descriptor>

   As application/hal+json:

   {
     "_links": {
       "self": {
         "href": "/svc"
       },
       "profile": [{
         "href": "/profiles/hcli"
       }],
       "type": [{
         "href": "/profiles/hcli"
       },
       "collection": {
         "href": "/svc/search{?id}",
         "templated" : true
       }
     }
   }

   As application/hal+xml:

   <resource self="/svc">
     <link rel="profile" href="/profiles/hcli"/>
     <link rel="type" href="/profiles/hcli"/>
     <link rel="collection"
           href="/svc/search{?rvalueId}"
           templated="true"/>
   </resource>

7.  Recommendations

   TBD

8.  Security Considerations

   TBD

9.  IANA Considerations
 


Michaud                Expires September 18, 2017              [Page 11]

Internet-Draft           ALPS Bindings for HAL            March 17, 2017


   TBD

10.  Normative References

   [RFC5988]  Nottingham, M., "Web Linking", RFC 5988, October 2010.

   [RFC6903]  Snell, J., "Additional Link Relation Types", RFC 6903,
              March 2013

11.  Informative References

   [I-D.draft-amundsen-richardson-foster-alps]

              Amundsen, M., CA Technologies, Inc., Richardson L.,
              Foster, M., "Application-Level Profile Semantics (ALPS)",
              draft-amundsen-richardson-foster-alps-02 (work in
              progress), August 2015.

   [I-D.draft-kelly-json-hal]

              Kelly, M., "JSON Hypertext Application Language", draft-
              kelly-json-hal-08 (work in progress), May 2016.

   [I-D.draft-michaud-xml-hal]

              Michaud, J., "XML Hypertext Application Language", draft-
              michaud-xml-hal-02 (work in progress), February 2017

Appendix A.  Acknowledgements

   TBD

Appendix B.  Frequently Asked Questions

   TBD

Author's Address

   Jeff Michaud

   Email: cometaj2@comcast.net
   Twitter: @cometaj2









Michaud                Expires September 18, 2017              [Page 12]
