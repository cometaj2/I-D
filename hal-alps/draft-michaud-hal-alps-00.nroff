.\" Auto generated Nroff by NroffEdit on April 10, 2015
.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds LF Michaud
.ds RF FORMFEED[Page %]
.ds LH Internet-Draft
.ds RH March 17, 2017
.ds CH ALPS Bindings for the HAL media-types
.ds CF Expires September 18, 2017
.hy 0
.nh
.ad l
.in 0

.nf
.tl 'Network Working Group''J. Michaud'
.tl '\%Internet-Draft''March 17, 2017'
.tl 'Intended status: Informational'''
.tl 'Expires: September 18, 2017'''
.fi
.in 3


.ce 2
ALPS Bindings for the HAL media-types
\%draft-michaud-hal-alps-00

.ti 0
Abstract

This document defines ALPS bindings for the application/hal+json and application/hal+xml media-types.

.ti 0
Status of This Memo

This Internet-Draft is submitted in full conformance with the provisions of BCP 78 and BCP 79.

Internet-Drafts are working documents of the Internet Engineering Task Force (IETF).  Note that other groups may also distribute working documents as Internet-Drafts.  The list of current Internet-Drafts is at http://datatracker.ietf.org/drafts/current/.

Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time.  It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress."

.ti 0
Copyright Notice

Copyright (c) 2017 IETF Trust and the persons identified as the document authors.  All rights reserved.

This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents \%(http://trustee.ietf.org/license-info) in effect on the date of publication of this document.  Please review these documents carefully, as they describe your rights and restrictions with respect to this document.  Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.






.\" \# TD4  -- Set TOC depth by altering this value (TD5 = depth 5)
.\" \# TOC  -- Beginning of auto updated Table of Contents
.in 0
Table of Contents

.nf
   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2
   2.  Requirements . . . . . . . . . . . . . . . . . . . . . . . . .  2
   3.  A Review of ALPS Principles  . . . . . . . . . . . . . . . . .  2
   4.  Servers and Clients  . . . . . . . . . . . . . . . . . . . . .  3
   5.  Advertising ALPS Profiles for HAL Representations  . . . . . .  3
     5.1.  HAL profile and type relations . . . . . . . . . . . . . .  3
     5.2.  Link Header  . . . . . . . . . . . . . . . . . . . . . . .  4
     5.3.  Additional Considerations  . . . . . . . . . . . . . . . .  4
   6.  Basic Mapping Rules for ALPS to HAL  . . . . . . . . . . . . .  5
     6.1.  ALPS descriptor properties property  . . . . . . . . . . .  5
       6.1.1.  id . . . . . . . . . . . . . . . . . . . . . . . . . .  5
         6.1.1.1.  Simple Form  . . . . . . . . . . . . . . . . . . .  6
       6.1.2.  name . . . . . . . . . . . . . . . . . . . . . . . . .  8
       6.1.3.  type . . . . . . . . . . . . . . . . . . . . . . . . .  8
         6.1.3.1. semantic  . . . . . . . . . . . . . . . . . . . . .  8
         6.1.3.2. safe, unsafe, or idempotent . . . . . . . . . . . . 10
   7.  Recommendations  . . . . . . . . . . . . . . . . . . . . . . . 12
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 12
   10.  Normative References  . . . . . . . . . . . . . . . . . . . . 12
   11.  Informative References  . . . . . . . . . . . . . . . . . . . 12
   Appendix A.  Acknowledgements  . . . . . . . . . . . . . . . . . . 13
   Appendix B.  Frequently Asked Questions  . . . . . . . . . . . . . 13
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 13
.fi
.in 3

.\" \# ETC -- End of auto updated Table of Contents

.ti 0
1.  Introduction

.fi
In order to provide coherent use of Application Level Profile Semantics (ALPS) [I-D.draft-amundsen-richardson-foster-alps] in HAL documents [I-D.draft-kelly-json-hal] and [I-D.draft-michaud-xml-hal], ALPS bindings for the HAL media-types (application/hal+json and application/hal+xml) must be defined.

This specification establishes conventions required for consistent expression of Application Level Profile Semantics (ALPS) in HAL documents.

.ti 0
2.  Requirements

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].

.ti 0
3.  A Review of ALPS Principles

The Application-Level Profile Semantics (ALPS) [I-D.draft-amundsen-richardson-foster-alps] specification is designed to describe the data elements and state transitions that make up a problem domain (e.g. micro-blogging, accounting, etc.). ALPS documents are designed to be useful to both client and server implementers and can be used at both run-time and design-time to handle the generation and interpretation of response representations. ALPS description documents are referred to as "profiles" or "profile documents".

Since the aim is to support a wide set of use cases (clients, servers, run-time, design-time, etc.), ALPS profiles do not describe the runtime behavior of any single system. Instead, ALPS profiles describe the problem domain boundaries (e.g. the possible data elements and possible state transitions). It is up to implementers to decide how they wish to use ALPS profiles in order to create an actual service instance or client application.

.ti 0
4.  Servers and Clients

For server implementers, ALPS profiles establish the list of possible identifiers for data values (givenName, familyName, etc.) and transitions (publish, createUser, etc). ALPS profiles also provide additional description information for state transitions including whether the transition is safe, idempotent or unsafe and, in some cases, whether there are any possible arguments that can be passed with each transition.

Client implementers can use the same ALPS document as a guide for what to expect from a service which advertises support for an ALPS profile. For example, if a service announces that it uses the ALPS profile for micro-blogging, then any client application that was built to support the micro-blogging profile SHOULD be able to recognize all the important data elements and state transitions emitted by that service.

.ti 0
5.  Advertising ALPS Profiles for HAL Representations

Servers returning HAL documents MUST only advertise the ALPS profiles they support using one of the following methods

.ti 0
5.1.  HAL profile and type relations

HAL documents SHOULD use the profile and type relations in a HAL Link. The profile relation value SHOULD be set to the URL of the ALPS profile document and the type relation [RFC6903] SHOULD be set to the URL of the ALPS profile, or a URI fragment referencing a descriptor.id that exists in the referenced ALPS profile.

.nf
As application/hal+json:

{
  "_links": {
    "self": {
      "href": "/svc"
    },
    "profile": {
      "href": "/profiles/accounting"
    },
    "type": {
      "href": "/profiles/accounting"
    }
  }
}
.fi

.nf
As application/hal+xml:

<resource rel="self" href="/svc">
  <link rel="profile" href="/profiles/accounting"/>
  <link rel="type" href="/profiles/accounting"/>
</resource>
.fi

.ti 0
5.2.  Link Header

Responses can include the Link header, in conformance with [RFC5988], with the href value set to the URL of the ALPS profile document or type and the rel value set to "profile" or "type"".

Link: </profiles/accounting>; rel="profile", </profiles/accounting#invoice>;rel="type"

.ti 0
5.3.  Additional Considerations

It is valid for a service to advertise support for more than one ALPS profile for the same response. For example, a single response from a server MAY include multiple HAL profile relations.

.nf
As application/hal+json:

{
  "_links": {
    "self": {
      "href": "/svc"
    },
    "profile": [{
      "href": "/profiles/accounting"
    },
    {
      "href": "/profiles/finance"
    }],
    "type": [{
      "href": "/profiles/accounting"
    },
    {
      "href": "/profiles/finance"
    }]
  }
}
.fi

In the above case, the client application has been informed that the response MAY contain data elements and state transitions from both the finance and the accounting ALPS profiles.

Clients accepting HAL documents SHOULD look for the ALPS profile in each of the mentioned places (.e.g. Link Header, HAL Profile Relation), as appropriate to the response. If an ALPS profile reference appears in more than one location, all profiles SHOULD be considered valid.

.ti 0
6.  Basic Mapping Rules for ALPS to HAL

.ti 0
6.1.  ALPS descriptor properties property

.ti 0
6.1.1.  id

The descriptor.id, used in conjunction with the descriptor.type set to "semantic", without an ALPS.descriptor.name, MUST be transformed into a "namespaced" or "CURIE syntax" property with the same name as the descriptor.id.

Below are valid examples for both the application/hal+json and the application/hal+xml media-types:

.nf
<!-- ALPS document fragment -->
<descriptor id="section" type="semantic">
  <descriptor id="name" type="semantic" />
  <descriptor id="description" type="semantic" />
</descriptor>

As application/hal+json:

{
  "_links": {
    "curies": [{
      "href": "/profiles/hcli#{rel}",
      "name": "alps",
      "templated": true
    }],
    "self": {
      "href": "/svc"
    },
    "profile": [{
      "href": "/profiles/hcli"
    }],
    "type": [{
      "href": "/profiles/hcli"
    }]
  },
  "alps:section": [{
    "alps:name": "name",
    "alps:description": "jsonf - a simple formatter for JSON"
  }, {
    "alps:name": "synopsis",
    "alps:description": "jsonf <command>"
  }]
}

As application/hal+xml:

<resource self="/svc" xmlns:alps="/profiles/hcli#">
  <link rel="profile" href="/profiles/hcli"/>
  <link rel="type" href="/profiles/hcli"/>
  <alps:section>
    <alps:name>name</alps:name>
    <alps:description>A simple formatter for JSON</alps:description>
  </alps:section>
  <alps:section>
    <alps:name>synopsis</alps:name>
    <alps:description>jsonf &lt;command&gt;</alps:description>
  </alps:section>
</resource>
.fi

One notable exception exists when a semantic descriptor.type contains a non-semantic descriptor.type. This is covered in a later section covering descriptor.type.

.ti 0
6.1.1.1.  Simple Form

To promote simplicity, in the HAL spirit, and when more complex descriptor.id disambiguation is not necessary, this specification allows for the omission of "namespaced" or "CURIE syntax" identifiers. 

The descriptor.id and the ALPS.descriptor.type set to "semantic" MAY be transformed into a HAL document property with the same name as the descriptor.id, but without namespace or CURIE syntax dereference.

Below are valid examples for both the application/hal+json and the application/hal+xml media-types:

.nf
<!-- ALPS document fragment -->
<descriptor id="section" type="semantic">
  <descriptor id="name" type="semantic" />
  <descriptor id="description" type="semantic" />
</descriptor>

As application/hal+json:

{
  "_links": {
    "self": {
      "href": "/svc"
    },
    "profile": [{
      "href": "/profiles/hcli"
    }],
    "type": [{
      "href": "/profiles/hcli"
    }]
  },
  "section": [
    {
      "name": "name",
      "description": "A simple formatter for JSON"
    },
    {
      "name": "synopsis",
      "description": "jsonf <command>"
    }
  ]
}

As application/hal+xml:

<resource self="/svc">
  <link rel="profile" href="/profiles/hcli"/>
  <link rel="type" href="/profiles/hcli"/>
  <section>
    <name>name</name>
    <description>A simple formatter for JSON</description>
  </section>
  <section>
    <name>synopsis</name>
    <description>jsonf &lt;command&gt;</description>
  </section>
</resource>
.fi

Servers MAY choose to represent HAL documents using either the complex form or the simple form, in which case clients that understand ALPS bindings for HAL should be ready to process both forms of HAL documents.

Semantics for ALPS profiles that attempt to disambiguate non-unique descriptor.id by using the descriptor.name are undefined under this specification.

.ti 0
6.1.2.  name

The descriptor.name property semantics are undefined in the semantic descriptor case and SHOULD NOT be used.

The descriptor.name property semantics are otherwise defined and MAY be used in non-semantic descriptor case to help differentiate between otherwise identical descriptor.id and HAL link relation id.

An example of descriptor.name use is included in the section covering "safe, unsafe, or idempotent" descriptor.type.

.ti 0
6.1.3.  type

.ti 0
6.1.3.1. semantic

Coverage for the descriptor.type property with a value of "semantic" is covered under sections covering descriptor.id and descriptor.name.

However, an important exception to the semantic descriptor.id case is when a semantic descriptor contains a single non-semantic descriptor. Such cases lead to the formation of linked resources or embedded resources, or both, in a HAL document. Determination of whether formation leads to the presence of a link, an embedded resource, or both, is left to service implementers.

If a service presents a link, the link should use the non-semantic descriptor.id as the link relation. The HAL "profile" link property SHOULD contain a URI to the ALPS profile and the HAL "type" link property SHOULD contain a URI to the ALPS profile followed by a URI fragment referencing the descriptor.id of the child non-semantic descriptor.id.

If a service presents an embedded resource, the embedded resource SHOULD contain a "profile" link relation referencing the URI of the ALPS profile, a "type" link relation referencing the URI of the ALPS profile and fragment referencing the descriptor.id of the child non-semantic descriptor.id

.nf
<!-- ALPS document fragment -->
<descriptor id="command" type="semantic">
  <descriptor id="item" type="safe">
    <doc>A link to an individual command summary.</doc>

    <descriptor id="next" type="unsafe">
      <doc>A link to select a command.</doc>
    </descriptor>
  </descriptor>
  <descriptor id="name" type="semantic" />
  <descriptor id="description" type="semantic" />
</descriptor> 

As application/hal+json:

{
  "_links": {
    "self": {
      "href": "/svc"
    },
    "profile": [{
      "href": "/profiles/hcli"
    }],
    "type": [{
      "href": "/profiles/hcli"
    },
    "item": {
      "href": "/svc/jsonf/def/go?command=jsonf",
      "profile": "/profiles/hcli",
      "type" : "/profiles/hcli#command"
    }
  },
  "_embedded" : {
    "item" : [{
      "_links" : {
        "self" : {
          "href" : "/svc/jsonf/def/go?command=jsonf"
        },
        "next" : [{
          "href" : "/svc/jsonf?command=jsonf+go"
        }],
        "profile" : [{
          "href" : "/profiles/hcli"
        }],
        "type" : [{
          "href" : "/profiles/hcli#command"
        }]
      },
      "description" : "Kicks off JSON formatting.",
      "name" : "go"
    }]
  }
}

As application/hal+xml:

<resource self="/svc">
  <link rel="profile" href="/profiles/hcli"/>
  <link rel="type" href="/profiles/hcli"/>
  <link rel="item"
        href="/svc/cli/jsonf/__cdef/go?command=jsonf"
        profile="/profiles/hcli"
        type="/profiles/hcli#command"/>
  <section>
    <name>name<name/>
    <description>A simple formatter for JSON</description>
  </section>
  <section>
    <name>synopsis<name/>
    <description>jsonf &lt;command&gt;</description>
  </section>
  <resource rel="item"
            href="/svc/cli/jsonf/__cdef/go?command=jsonf">
    <link rel="profile"
          href="/profiles/hcli"/>
    <link rel="type"
          href="/profiles/hcli#command"/>
    <link rel="next"
          href="/svc/jsonf?command=jsonf+go"/>
    <name>go</name>
    <description>Kicks off JSON formatting.</description>
  </resource>
</resource>
.fi 

Semantics for a semantic descriptor containing multiple peer non-semantic descriptors are undefined.

.ti 0
6.1.3.2. safe, unsafe, or idempotent

If a non-semantic descriptor is otherwise not embedded in a semantic descriptor, then it SHOULD only yield the formation of a templated link (a form). Notably, the HAL profile and type properties SHOULD be absent. The descriptor.id value should be used as the name of the value to fill in the URI template.

The "namespaced" or "CURIE syntax" SHOULD NOT be used in the expansion variable of the URI template. the "namespaced" or "CURIE syntax" MAY however be used for the link relation, as needed, and as defined in the section covering descriptor.id.

The descriptor.name MAY be use to help differentiate between otherwise identical descriptor.id to provide "filter-like" capabilities.

.nf
<!-- ALPS document fragment -->
<descriptor id="collection" name="red-collection" type="safe">
  <doc format="text">A search form with one input.</doc>
  <descriptor id="rvalueId" type="semantic" />
</descriptor>

<descriptor id="collection" name="blue-collection" type="safe">
  <doc format="text">A search form with one input.</doc>
  <descriptor id="bvalueId" type="semantic" />
</descriptor>

As application/hal+json:

{
  "_links": {
    "self": {
      "href": "/svc"
    },
    "profile": [{
      "href": "/profiles/hcli"
    }],
    "type": [{
      "href": "/profiles/hcli"
    },
    "collection": {
      "href": "/svc/search{?rvalueId}",
      "name" : "red-collection"
      "templated" : true
    },
    "collection": {
      "href": "/svc/search{?bvalueId}",
      "name" : "blue-collection"
      "templated" : true
    }
  }
}

As application/hal+xml:

<resource self="/svc">
  <link rel="profile" href="/profiles/hcli"/>
  <link rel="type" href="/profiles/hcli"/>
  <link rel="collection"
        href="/svc/search{?rvalueId}"
        name="red-collection"
        templated="true"/>
  <link rel="collection"
        href="/svc/search{?bvalueId}"
        name="blue-collection"
        templated="true"/>
</resource>
.fi

.ti 0
7.  Recommendations

TBD

.ti 0
8.  Security Considerations

TBD

.ti 0
9.  IANA Considerations

TBD

.ti 0
10.  Normative References

.in 14
.ti 3
[RFC5988]  Nottingham, M., "Web Linking", RFC 5988, October 2010.

.ti 3
[RFC6903]  Snell, J., "Additional Link Relation Types", RFC 6903, March 2013

.ti 0
11.  Informative References
.fi

.in 14
.ti 3
[I-D.draft-amundsen-richardson-foster-alps]

Amundsen, M., CA Technologies, Inc., Richardson L., Foster, M., "Application-Level Profile Semantics (ALPS)", draft-amundsen-richardson-foster-alps-02 (work in
progress), August 2015.

.ti 3
[I-D.draft-kelly-json-hal]

Kelly, M., "JSON Hypertext Application Language", draft-kelly-json-hal-08 (work in progress), May 2016.

.ti 3
[I-D.draft-michaud-xml-hal]

Michaud, J., "XML Hypertext Application Language", draft-michaud-xml-hal-02 (work in progress), February 2017
.nf

.in 3
.ti 0
Appendix A.  Acknowledgements

.fi
TBD
.nf

.ti 0
Appendix B.  Frequently Asked Questions

TBD

.ti 0
Author's Address

.nf
Jeff Michaud

Email: cometaj2@comcast.net
Twitter: @cometaj2
